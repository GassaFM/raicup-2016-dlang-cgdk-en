module model.move;

import model.message;
import model.action_type;
import model.skill_type;

/**
 * An encapsulated result of each move of your strategy.
 */
immutable class Move
{
    /**
     * Sets move speed for one tick.
     * $(BR)
     * By default the speed is in range of `-game.wizardBackwardSpeed` to `game.wizardForwardSpeed`.
     * These limits can be extended depending on skills of moving wizard and auras of nearby friendly wizards.
     * The `hastened` status can also greatly speed up a wizard.
     * $(BR)
     * If a specified value is out of the range, than it become equal to the nearest value of the range.
     * The positive values mean moving forward.
     * $(BR)
     * If the value `hypot (speed / maxSpeed, strafeSpeed / maxStrafeSpeed)` is greater than `1.0`, than both
     * `speed` and `strafeSpeed` will be divided by this value.
     */
    double speed;
    /**
     * Sets the strafe speed for one tick.
     * $(BR)
     * By default the strafe speed is in range of `-game.wizardStrafeSpeed` to `game.wizardStrafeSpeed`.
     * These limits can be extended depending on skills of moving wizard and auras of nearby friendly wizards.
     * The `hastened` status can also greatly speed up a wizard.
     * $(BR)
     * If a specified value is out of the range, than it become equal to the nearest value of the range.
     * The positive values mean moving to the right.
     * $(BR)
     * If the value `hypot (speed / maxSpeed, strafeSpeed / maxStrafeSpeed)` is greater than `1.0`, than both
     * `speed` and `strafeSpeed` will be divided by this value.
     */
    double strafeSpeed;
    /**
     * Sets the turn angle for one tick.
     * $(BR)
     * The turn angle is in radians and is relative to the current angle of the wizard.
     * By default the turn angle is in range of `-game.wizardMaxTurnAngle` to `game.wizardMaxTurnAngle`.
     * The `hastened` status increases bot limits by `1.0 + game.hastenedRotationBonusFactor` times.
     * $(BR)
     * If a specified value is out of the range, than it become equal to the nearest value of the range.
     * The positive values mean turning clockwise.
     */
    double turn;
    /**
     * Sets the action for one tick.
     * $(BR)
     * The specified action can be ignored by the game engine, if the controlling wizard has insufficient manapoints or
     * this action is on cooldown.
     */
    ActionType action;
    /**
     * Sets the cast angle for one tick.
     * $(BR)
     * The cast angle is in radians and is relative to the current angle of the wizard.
     * The cast angle is in range of `-game.staffSector / 2.0` to `game.staffSector / 2.0`.
     * $(BR)
     * If a specified value is out of the range, than it become equal to the nearest value of the range.
     * The positive values mean turning clockwise.
     * $(BR)
     * If the specified action is not a projectile spell, than the game engine will simply ignore this parameter.
     */
    double castAngle;
    /**
     * Sets the minimal cast distance for one tick.
     * $(BR)
     * If the distance from the center of the projectile to the point of its occurrence is less than the value of this
     * parameter, the battle properties of the projectile are ignored. The projectile passes freely through all other
     * game objects, except trees.
     * $(BR)
     * Default value is `0.0`. All collisions between a projectile and its caster are ignored by the game engine.
     * $(BR)
     * If the specified action is not a projectile spell, than the game engine will simply ignore this parameter.
     */
    double minCastDistance;
    /**
     * Sets the maximal cast distance for one tick.
     * $(BR)
     * If the distance from the center of the projectile to the point of its occurrence is greater than the value of
     * this parameter, the projectile will be removed from the game world. In this case, the `fireball` projectile
     * detonates.
     * $(BR)
     * The default value of this parameter is higher than the maximal flying range of any projectile in the game.
     * $(BR)
     * If the specified action is not a projectile spell, than the game engine will simply ignore this parameter.
     */
    double maxCastDistance = 10000.0;
    /**
     * Sets the id of the target living unit to cast a status spell.
     * $(BR)
     * According to the game rules, the valid targets are only the wizards of the same faction. If the wizard with the
     * specified id is not found, the status is applied directly to the wizard performing the action. The relative angle
     * to the target should be in range of `-game.staffSector / 2.0` to `game.staffSector / 2.0`. The
     * distance to the target is limited by `wizard.castRange`.
     * $(BR)
     * The default value of this parameter is `-1` (wrong id).
     * $(BR)
     * If the specified action is not a status spell, than the game engine will simply ignore this parameter.
     */
    long statusTargetId = -1L;
    /**
     * Selects the skill to learn before the start of the next tick.
     * $(BR)
     * The setting will be ignored by the game engine if the current wizard level is less than or equal to the number of
     * the already learned skills. Some skills may also require learning other skills.
     * $(BR)
     * In some game modes a wizard can not learn skills.
     */
    SkillType skillToLearn;
    /**
     * Sets the messages for the wizards of the same faction.
     * $(BR)
     * Available only to the master wizard. If not empty, the number of messages must be strictly equal to the number of
     * wizards of the friendly faction (dead or alive) except the master wizard.
     * $(BR)
     * Messages are addressed in ascending order of wizard ids. Some messages can be empty (`null`), if supported
     * by the programming language used by strategy. In other case all items should be the correct messages.
     * $(BR)
     * The game engine may ignore the message to a specific wizard, if there is another pending message to the same
     * wizard. If the addressed wizard is dead, then the message will be removed from the game world and the wizard will
     * never get it.
     * $(BR)
     * Not all game modes support the messages.
     */
    Message [] messages;
}
